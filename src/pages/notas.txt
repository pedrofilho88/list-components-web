# para criar o projeto já com o typescript instalado
npx create-next-app@latest --ts
# para instalar o tailwindcss
npm install -D tailwindcss postcss autoprefixer
# para inicializar o tailwindcss e criar os arquivos de configuração
npx tailwindcss init -p



// ************** TRECHOS DE CODIGO ************************************************


import { prototype } from "events"
import Part from "../core/Part"


interface TableProps {
    parts: Part[]
}

export default function Table (props: TableProps){
    
    function renderHeader(){
        return (
            <tr>
                <th className="text-left p-3">Id</ th>
                <th className="text-left p-3">nome</ th>
                {/* <th className="text-left p-3">descrição do fabricante</ th>
                <th className="text-left p-3">partnumber</ th> */}
            </tr>
        )
    }

    function renderData(){
        return props.parts?.map((part, i) => {
            return(
                <tr key={part.id}>
                    <td className="text-left p-2">{part.getId()} </td >
                    <td className="text-left p-2">{part.name} </td >
                    {/* <td className="text-left p-2">{part.fabricatordescription} </td >
                    <td className="text-left p-2">{part.partnumber} </td > */}
                </tr>
            )
        } )
    }
    
    return (
        <table className="text-xs w-full overflow-hidden rounded-md">
            <thead className=" text-gray-100 bg-gradient-to-r from-purple-800 to bg-purple-500">
            {renderHeader()}
            </thead>
            <tbody>
            {renderData()}
            </tbody>
            
        </table>

    )
}